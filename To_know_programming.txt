런타임 : 컴퓨터 프로그램이 실행되고 있는 동안의 동작

컴파일 : 원시 코드(=소스 코드 : 원래의 문서)에서 목적코드(출력된 문서)로 옮기는 과정

인터프리터 : 프로그래밍 언어의 소스 코드를 바로 실행하는 컴퓨터 프로그램 또는 환경
->원시 코드를 기계어로 번역하는 컴파일러와 대비된다.

기계어 : CPU가 직접 해독하고 실행할 수 있는 비트 단위로 쓰인 컴퓨터 언어를 통틀어 일컫는다.
->프로그램을 나타내는 가장 낮은 단계의 개념
->assembly어와 1:1로 쓰일 수 있다.

assembly어 : 컴퓨터 프로그래밍의 저급 언어

컴푸터 구조 : 컴퓨터 공학에서 컴퓨터 시스템의 기능(functionality), 조직(organization), 구현(implementation)에 대한 법칙과 방법을 통칭

마이크로프로세서(microprocessor, microprocessing unit) 또는 초소형 연산 처리 장치 : 컴퓨터의 중앙처리 장치(CPU)

중앙 처리 장치(CPU) : 컴퓨터 시스템을 통제하고 프로그램의 연산을 실행하고 처리하는 가장 핵심적인 컴퓨터의 제어장치, 혹은 그 기능을 내장한 칩
->기계어로 쓰인 컴퓨터 프로그램의 명령어를 해석하여 실행한다.

프로세서 레지스터(또는 레지스터) : 컴퓨터의 프로세서 내에서 자료를 보관하는 아주 빠른 기억 장소 
->현재 계산을 수행중인 값을 저장하는데 사용된다.
->메인 메모리에서 레지스터로 데이터를 옮겨와 데이터를 처리한 후 그 내용을 다시 레지스터에서 메인 메모리로 저장
->메모리 계층의 최상위에 위치, 가장 빠른 속도로 접근 가능한 메모리
->과거에 플립플롭으로 구현되기도 했다.

CPU 캐시 : CPU 구조에 메모리로 사용하도록 구성되었다.
->메인 메모리에서 가장 자주 사용되는 위치의 데이터를 갖고 있는 크기는 작지만 빠른 메모리

메모리 계층 구조 : 레지스터
		- 캐시 
		- 메모리 
		- 하드 디스크
->레지스터와 캐시는 CPU 내부에 존재
->메모리는 CPU 외부에 존재, 레지스터와 캐시보다 더 느리게 접근 할 수 밖에 없다.
->하드 디스크는 CPU가 직접 접근할 방법조차 없다. 접근하기 위해서는 하드 디스크의 데이터를 메모리로 이동시키고, 메모리에서 접근해야 한다. 아주 느린 접근 밖에 없다.

디지털 회로 : 디지털 신호를 이용하는 전자회로로, 아날로그 신호를 이용하는 아날로그 회로와 반대되는 개념이다.
->일반적으로 불 대수(이진수 1 0)로 표현할 수 있으며, 논리 회로들을 조합하여 만들어진다.

논리 회로 : 불 대수를 물리적 장치에 구현한 것 하나 이상의 논리적 입력값에 대해 논리 연산을 수행하여 하나의 논리적 출력값을 얻는 전자회로
->AND, OR, NOT


CODE ->함수, 제어문, 상수영역
DATA->전역변수
BSS->전역변수
HEAP->동적할당
STACK->지역변수